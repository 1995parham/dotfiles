" Settings {{{
syntax on

" UFT-8 Encoding
set encoding=utf-8
scriptencoding utf-8

" Stick unamed register into system clipboard
if $TMUX ==# ''
    set clipboard+=unnamed
endif

" Correct delete key in OSX
set backspace=eol,start,indent

set autoindent  " Auto indent
set smartindent " Smart indent
set wrap        " Wrap lines
set smarttab
set number
set expandtab
set fileformats=unix,dos,unix

" Get rid of the delay when pressing O (for example)
" http://stackoverflow.com/questions/2158516/vim-delay-before-o-opens-a-new-line
set timeout timeoutlen=1000 ttimeoutlen=100

" Always show status bar
set laststatus=2

" Set the status line to something useful
set statusline=%f\ %=L:%l/%L\ %c\ (%p%%)

" Hide the toolbar
set guioptions-=T

" No backup files
set nobackup

" No write backup
set nowritebackup

" No swap file
set noswapfile

" Set leader key
let mapleader = '\<space>'

" Always show cursor
set ruler

" Make sure any searches /searchPhrase doesn't need the \c escape character
set ignorecase

" Ignore case in search
set smartcase

" Autoload files that have changed outside of vim
set autoread

" Highlight tailing whitespace
set list listchars=tab:\ \ ,trail:·

" Mod line supporting
set modeline
set modelines=5

" Set folding type in marker
set foldmethod=marker

" Set search results highlighting
set hlsearch

" Let's move between tabs and create them !
nmap <C-w>n :tabnext<CR>
nmap <C-w>p :tabprevious<CR>
nmap <C-w>c :tabnew<CR>

" }}}

" FileType Configurations {{{

augroup format
        " PHP
        autocmd Filetype php setlocal ts=4 sts=4 sw=4

        " C++
        autocmd Filetype cpp setlocal ts=4 sts=4 sw=4 expandtab

        " Json
        autocmd Filetype json setlocal ts=2 sts=2 sw=2 expandtab

        " Docker-compose
        autocmd Filetype docker-compose setlocal ts=2 sts=2 sw=2 expandtab

        " Vue
        autocmd BufRead,BufNewFile *.vue setlocal filetype=vue.javascript
        autocmd Filetype vue.javascript setlocal ts=2 sts=2 sw=2 expandtab

        " Babel configuration
        autocmd BufRead,BufNewFile .babelrc setlocal filetype=json

        " HTML
        autocmd Filetype html setlocal ts=2 sts=2 sw=2 expandtab

        " JavaScript
        autocmd Filetype javascript setlocal ts=2 sts=2 sw=2 expandtab

        " Git commit
        autocmd Filetype gitcommit setlocal spell textwidth=72
augroup end

" }}}

" Commands {{{

" Command Mappings
command Spellcheck setlocal spell spelllang=en_us

" }}}

" Plugins {{{
let data_dir = has('nvim') ? stdpath('data') . '/site' : '~/.vim'

if empty(glob(data_dir . '/autoload/plug.vim'))
  silent execute '!curl -fLo '.data_dir.'/autoload/plug.vim --create-dirs  https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

call plug#begin('~/.vim/plugged')

" Naz Neovim Theme
Plug '1995parham/naz.vim', { 'tag': 'v1.0.0' }

" git
Plug 'airblade/vim-gitgutter' " A Vim plugin which shows a git diff in the gutter (sign column) and stages/undoes hunks.
Plug 'cohama/agit.vim'        " A powerful Git log viewer

" nerdtree
Plug 'jistr/vim-nerdtree-tabs'     " NERDTree and tabs together in Vim, painlessly
Plug 'scrooloose/nerdtree'         " A tree explorer plugin for vim.
Plug 'Xuyuanp/nerdtree-git-plugin' " A plugin of NERDTree showing git status

" Vim plugin to list, select and switch between buffers.
Plug 'jeetsukumaran/vim-buffergator'

" vim plugin that provides additional text objects
Plug 'wellle/targets.vim'

" vim-wakatime
Plug 'wakatime/vim-wakatime'

" A solid language pack for Vim.
Plug 'sheerun/vim-polyglot'

" lean & mean status/tabline for vim that's light as air
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'

" An alternative sudo.vim for Vim and Neovim
Plug 'lambdalisue/suda.vim'

" Add plugins to &runtimepath
call plug#end()

"}}}

" Plugins Configurations {{{

" wakatime {{{
let g:wakatime_PythonBinary = 'python3'
let g:wakatime_ScreenRedraw = 1
" }}}

" naz.vim {{{
if (has('termguicolors'))
        set termguicolors
endif

let g:naz_term_italic = 0
colorscheme naz
" }}}

" gitgutter {{{
let g:gitgutter_enabled = 1
let g:gitgutter_eager = 0
highlight clear SignColumn
" }}}

" nerdtree {{{
map <C-n> <plug>NERDTreeTabsToggle<CR>
let g:nerdtree_tabs_open_on_console_startup = 2
let g:nerdtree_tabs_synchronize_view = 0
let g:NERDTreeGitStatusIndicatorMapCustom = {
    \ 'Modified'  : '✹',
    \ 'Staged'    : '✚',
    \ 'Untracked' : '✭',
    \ 'Renamed'   : '➜',
    \ 'Unmerged'  : '═',
    \ 'Deleted'   : '✖',
    \ 'Dirty'     : '✗',
    \ 'Clean'     : '✔︎',
    \ 'Ignored'   : '☒',
    \ 'Unknown'   : '?'
    \ }
" }}}

" Airline (status line) {{{
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#taboo#enabled = 1
let g:airline#extensions#tabline#show_buffers = 0
let g:airline#extensions#tagbar#enabled = 1

let g:airline_powerline_fonts = 1

let g:airline_theme = 'tomorrow'

let g:airline_section_c = '%{strftime("%c")}'
" }}}

"  suda.vim{{{
let g:suda_smart_edit = 1
" }}}

"}}}
