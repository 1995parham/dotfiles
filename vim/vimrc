" Settings {{{
syntax on

" Stick unamed register into system clipboard
set clipboard+=unnamed

" Correct delete key in OSX
set backspace=eol,start,indent

set ai " Auto indent
set si " Smart indent
set wrap " Wrap lines
set smarttab
set number
set ffs=unix,dos,unix
set background=dark

" Use vim, not vi api
set nocompatible

" Get rid of the delay when pressing O (for example)
" http://stackoverflow.com/questions/2158516/vim-delay-before-o-opens-a-new-line
set timeout timeoutlen=1000 ttimeoutlen=100

" Always show status bar
set laststatus=2

" Set the status line to something useful
set statusline=%f\ %=L:%l/%L\ %c\ (%p%%)

" Hide the toolbar
set guioptions-=T

" No backup files
" set nobackup

" No write backup
" set nowritebackup

" No swap file
" set noswapfile

" Always show cursor
set ruler

" Make sure any searches /searchPhrase doesn't need the \c escape character 
set ignorecase

" Ignore case in search
set smartcase

" Autoload files that have changed outside of vim
set autoread

" Highlight tailing whitespace
set list listchars=tab:\ \ ,trail:Â·

" Mod line supporting
set modeline
set modelines=5

" Set folding type in marker
set foldmethod=marker

" Set search results highlighting
set hlsearch

" }}}

" Plugins {{{
execute pathogen#infect()
filetype plugin indent on " Required by Pathogen Plugin Manager

call plug#begin('~/.vim/plugged')

" Make sure you use single quotes
Plug 'junegunn/seoul256.vim'
Plug 'junegunn/vim-easy-align'
Plug 'octol/vim-cpp-enhanced-highlight'
Plug 'lervag/vimtex'
Plug 'moll/vim-node'
Plug 'digitaltoad/vim-jade'
Plug 'wakatime/vim-wakatime'
Plug '1995parham/vim-zimpl'
Plug '1995parham/vim-gas'
Plug '1995parham/vim-header'
Plug 'xuhdev/SingleCompile'
Plug 'klen/python-mode'
Plug 'scrooloose/syntastic'
Plug 'jelera/vim-javascript-syntax'
Plug 'othree/javascript-libraries-syntax.vim'
Plug 'airblade/vim-gitgutter'
Plug 'bling/vim-airline'

" Group dependencies, vim-snippets depends on ultisnips
Plug 'SirVer/ultisnips' | Plug 'honza/vim-snippets'

" On-demand loading
Plug 'scrooloose/nerdtree', { 'on':  'NERDTreeToggle' }
Plug 'tpope/vim-fireplace', { 'for': 'clojure' }

" Using git URL
Plug 'https://github.com/junegunn/vim-github-dashboard.git'

" Plugin options
Plug 'nsf/gocode', { 'tag': 'v.20150303', 'rtp': 'vim' }

" Plugin outside ~/.vim/plugged with post-update hook
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': 'yes \| ./install' }

" Add plugins to &runtimepath
call plug#end()

" Theme
set background=light
colorscheme Tomorrow-Night

" Airline (status line)
let g:airline_powerline_fonts = 1

" Git gutter
let g:gitgutter_enabled = 1
let g:gitgutter_eager = 0
let g:gitgutter_sign_column_always = 1
highlight clear SignColumn

" Super tab
let g:SuperTabMappingForward = "<C-h>"

" Pymode
let g:pymode = 1
let g:pymode_trim_whitespaces = 1
let g:pymode_options = 1
let g:pymode_python = 'python3'
let g:pymode_folding = 0
let g:pymode_lint = 1
let g:pymode_lint_message = 1
let g:pymode_lint_on_write = 1
let g:pymode_lint_unmodified = 1

" Header
let g:header_user = 'Parham Alvani'
let g:header_email = 'parham.alvani@gmail.com'

" Syntastic
let g:syntastic_python_python_exec = '/usr/bin/python3'
let g:syntastic_python_checkers = ['pylint']

" Airline
function! AirlineInit()
	  let g:airline_section_y = airline#section#create(['ffenc', '%{strftime("%H:%M")}'])
endfunction
autocmd VimEnter * call AirlineInit()

" }}}

" Commands {{{
" File formats
autocmd Filetype gitcommit setlocal spell textwidth=72

" }}}

" C syntax {{{
let c_gnu = 1
" }}}
