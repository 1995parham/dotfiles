# source bash profile (system-wide) {{{

mulate sh -c 'source /etc/profile'

# }}}

# path {{{
# prevent from duplicate records in path
typeset -U path
# }}}

# oh-my-zsh {{{

# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh

[ -d $ZSH ] || sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended --keep-zshrc

# If you come from bash you might have to change your $PATH.
path=('/usr/local/bin' $path)

# Set name of the theme to load. Optionally, if you set this to "random"
# it'll load a random theme each time that oh-my-zsh is loaded.
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
ZSH_THEME="1995parham"

# Set list of themes to load
# Setting this variable when ZSH_THEME=random
# cause zsh load theme from this variable instead of
# looking in ~/.oh-my-zsh/themes/
# An empty array have no effect
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
ZSH_CUSTOM=~/.zsh.plug

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
  vi-mode
  golang
  rust rustup cargo
  # oc helm kubectl
  gnu-utils
  pyenv

  proxy
)

source $ZSH/oh-my-zsh.sh

# local configuration
if [ -f $HOME/.zshrc.local ]; then
  source $HOME/.zshrc.local
fi

# }}}

# on-my-zsh-plugins {{{

# }}}

# aliases {{{

# export MANPATH="/usr/local/man:$MANPATH"
export EDITOR="$(which nvim)"
export SUDO_EDITOR="$(which nvim)"
export TERM="xterm-256color"

if [ -f $HOME/.dircolors -a $(command -v dircolors) ]; then
  eval $(dircolors $HOME/.dircolors)
fi

if [ -f $HOME/.dircolors -a $(command -v gdircolors) ]; then
  eval $(gdircolors $HOME/.dircolors)
fi

# set PATH so it includes user's private bin if it exists
if [ -d $HOME/bin ]; then
  path+=("$HOME/bin")
fi

# set PATH so it includes user's private bin if it exists
if [ -d $HOME/.local/bin ]; then
  path+=("$HOME/.local/bin")
fi

if [ -d /snap/bin ]; then
  path+=('/snap/bin')
fi

# use a wrapper around sdcv to conveniently format its output
# on osx it uses the prebuild mac dictionary.
function def() {
  if [[ "$OSTYPE" == "darwin"* ]]; then
    curl dict://dict.org/d:$1
  else
    sdcv -n --utf8-output --color "$@" 2>&1 | \
    fold --width=$(tput cols) | \
    less -FRX
  fi
}

# You may need to manually set your language environment
export LANG="en_US.UTF-8"
export LANGUAGE="en_US.UTF-8"
export LC_ALL="en_US.UTF-8"

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/rsa_id"

# edit command in vim
bindkey -M vicmd v edit-command-line

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
alias grep="grep --color=auto"
alias vi="vim"
alias r="source ~/.zshrc"

# use bat/batcat for viewing manpages
if command -v bat &> /dev/null; then
  export MANPAGER="sh -c 'col -bx | bat -l man -p'"
elif command -v batcat &> /dev/null; then
  export MANPAGER="sh -c 'col -bx | batcat -l man -p'"
fi

# }}}

# go {{{

export GOPATH=$HOME/Documents/Go
export GOPROXY="https://goproxy.io,direct"
if [ -d $HOME/Documents/Go/bin ]; then
  path+=("$HOME/Documents/Go/bin")
fi

# }}}

# python {{{

export VIRTUALENV_SYSTEM_SITE_PACKAGES=true

# }}}

# rust {{{

if [ -d $HOME/.cargo ]; then
  path+=("$HOME/.cargo/bin")
fi

# }}}

# k8s {{{

alias kcd='kubectl config set-context $(kubectl config current-context) --namespace'
alias kbb='kubectl run busybox --image=busybox:1.28 --rm -it --restart=Never --command --'

# }}}

# texlive {{{

if [ -d /usr/local/texlive/2020 ]; then
  MANPATH=/usr/local/texlive/2020/texmf-dist/doc/man:$MANPATH
  INFOPATH=/usr/local/texlive/2020/texmf-dist/doc/info:$INFOPATH
  path+=("/usr/local/texlive/2020/bin/x86_64-linux")
fi
# }}}

# path {{{
export PATH
# }}}

# navi {{{

_call_navi() {
  local selected
  if [ -n "$LBUFFER" ]; then
    if selected="$(printf "%s" "$(navi --print --fzf-overrides '--no-select-1' --query "${LBUFFER}" </dev/tty)")"; then
      LBUFFER="$selected"
    fi
  else
    if selected="$(printf "%s" "$(navi --print </dev/tty)")"; then
      LBUFFER="$selected"
    fi
  fi
  zle redisplay
}

zle -N _call_navi

bindkey '^h' _call_navi

# }}}
