# vim: ft=i3config
# sway config file

# Set mod key (Mod1=<Alt>, Mod4=<Super>)
set $mod Mod4

include ~/.config/sway/config.d/*.conf
include ~/.config/sway/hosts/`hostname`.conf

# set default desktop layout (default is tiling)
# workspace_layout tabbed <stacking|tabbed>

# Configure border style <normal|1pixel|pixel xx|none|pixel>
default_border pixel 1
default_floating_border normal

# Hide borders
hide_edge_borders none

# change borders
bindsym $mod+u border none
bindsym $mod+y border pixel 1
bindsym $mod+n border normal

# Use Mouse+$mod to drag floating windows
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec alacritty
# termpad is a special application class which is floating for terminal.
for_window [app_id="__termpad"] floating enable
bindsym $mod+Shift+Return exec alacritty --class="__termpad" --option="background_opacity=0.8"

# sway configuration at you glance to review
bindsym $mod+F1 exec alacritty --class="__termpad" --option="background_opacity=0.8" --command "bat" "$HOME/.config/sway/config"

# kill focused window
bindsym $mod+Shift+q kill

# start program launcher
bindsym $mod+d exec --no-startup-id rofi -show

bindsym $mod+Ctrl+m exec pavucontrol

bindsym $mod+Ctrl+b exec alacritty --class="__termpad" -e='bmenu' --option="background_opacity=0.8"
bindsym $mod+F2 exec firefox
bindsym $mod+F3 exec ranger
bindsym $mod+F5 exec alacritty --class="__termpad" -e='ncmpcpp' --option="background_opacity=0.8"

# dunst
bindsym $mod+Shift+d --release exec "killall dunst; exec notify-send 'restart dunst'"

# screenshot
# https://github.com/emersion/grim
bindsym Print exec --no-startup-id grim
bindsym $mod+Print --release exec --no-startup-id grim -g "$(swaymsg -t get_tree | jq -j '.. | select(.type?) | select(.focused).rect | "\(.x),\(.y) \(.width)x\(.height)"')"

# kill a window with a cursor
bindsym $mod+Ctrl+x --release exec --no-startup-id xkill

# idle configuration
exec swayidle -w \
          timeout 300 'swaylock -f -c 000000' \
          timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
          before-sleep 'swaylock -f -c 000000'
# this will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. it will also lock your screen before your computer goes to sleep.

# brightness and volume
bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle
bindsym XF86MonBrightnessDown exec brightnessctl set 5%-
bindsym XF86MonBrightnessUp exec brightnessctl set +5%

focus_follows_mouse no

# music player
bindsym XF86AudioPlay exec notify-send "$(mpc toggle | head -2)"
bindsym XF86AudioPause exec notify-send "$(mpc toggle | head -2)"
bindsym XF86AudioNext exec notify-send  "$(mpc next | head -2)"
bindsym XF86AudioPrev exec notify-send "$(mpc prev | head -2)"

# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# workspace back and forth (with/without active container)
workspace_auto_back_and_forth yes
bindsym $mod+b workspace back_and_forth
bindsym $mod+Shift+b move container to workspace back_and_forth; workspace back_and_forth

# split orientation
bindsym $mod+h split h
bindsym $mod+v split v
bindsym $mod+q split toggle

# toggle fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+Ctrl+space focus mode_toggle

# toggle sticky
bindsym $mod+Shift+s sticky toggle

# focus the parent container
bindsym $mod+a focus parent

# move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show

# navigate workspaces next / previous
bindsym $mod+Ctrl+Right workspace next
bindsym $mod+Ctrl+Left workspace prev

# change background
output * bg `find "$HOME/Pictures/GoSiMac" -maxdepth 1 -type f | shuf -n 1` fill

# Workspace names
# to display names or symbols instead of plain workspace numbers you can use
# something like: set $ws1 1:mail
#                 set $ws2 2:ï‚¬
set $ws1 1:main-1
set $ws2 2:main-2
set $ws3 3:emacs
set $ws4 4:www
set $ws5 5:vm
set $ws6 6:apps-1
set $ws7 7:apps-2
set $ws8 8:social

# switch to workspace
bindsym --to-code {
  $mod+1 workspace $ws1
  $mod+2 workspace $ws2
  $mod+3 workspace $ws3
  $mod+4 workspace $ws4
  $mod+5 workspace $ws5
  $mod+6 workspace $ws6
  $mod+7 workspace $ws7
  $mod+8 workspace $ws8
}

# Move focused container to workspace
bindsym $mod+Ctrl+1 move container to workspace $ws1
bindsym $mod+Ctrl+2 move container to workspace $ws2
bindsym $mod+Ctrl+3 move container to workspace $ws3
bindsym $mod+Ctrl+4 move container to workspace $ws4
bindsym $mod+Ctrl+5 move container to workspace $ws5
bindsym $mod+Ctrl+6 move container to workspace $ws6
bindsym $mod+Ctrl+7 move container to workspace $ws7
bindsym $mod+Ctrl+8 move container to workspace $ws8

# Move to workspace with focused container
bindsym $mod+Shift+1 move container to workspace $ws1; workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2; workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3; workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4; workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5; workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6; workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7; workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8; workspace $ws8

# Open applications on specific workspaces
# use `xporp` for finding about window classes and more
# assign [class="Thunderbird"] $ws1
# assign [class="Pcmanfm"] $ws3
assign [class="Telegram"] $ws4
assign [class="firefox"] $ws4
assign [class="Virt-manager"] $ws5
assign [class="Skype"] $ws8
assign [class="Emacs"] $ws3

# Open specific applications in floating mode
for_window [app_id="pavucontrol"] floating enable
for_window [class="Skype"] floating enable
for_window [class="Skype"] border none
for_window [app_id="Alacritty"] opacity set 0.95

# switch to workspace with urgent window automatically
# for_window [urgent=latest] focus

# reload the configuration file
bindsym $mod+Shift+r reload; exec "notify-send reloaded"

# Lock screen
bindsym $mod+9 exec --no-startup-id swaylock

# Theme colors
# class                 border  backgr. text    indic.   child_border
client.focused          #333333 #ffa500 #333333 #FDF6E3
client.focused_inactive #333333 #333333 #ffa500 #454948
client.unfocused        #333333 #333333 #ffa500 #454948
client.urgent           #333333 #333333 #b30000 #268BD2
# Background and text color are used to draw placeholder window contents (when restoring layouts). Border and indicator are ignored.
client.placeholder      #000000 #0c0c0c #ffffff #000000

client.background       #333333

bar {
  swaybar_command waybar
}

include /etc/sway/config.d/*
