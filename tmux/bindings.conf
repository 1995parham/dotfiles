# vim: ft=tmux

# remap prefix
set -g prefix C-Space
set -g prefix2 C-b

# quick key for moving back to the previous window
bind-key L last-window

# vim style bindings for pane movement
bind-key -r h select-pane -L
bind-key -r j select-pane -D
bind-key -r k select-pane -U
bind-key -r l select-pane -R

# fix issue with tmux repeating -r the arrow directions (meaning when you switch panes you can accidentally jump back to the other pane again)
bind-key Up    select-pane -U
bind-key Down  select-pane -D
bind-key Left  select-pane -L
bind-key Right select-pane -R

# make splitting and creating windows easier
bind-key v split-window -h -c "#{pane_current_path}"
bind-key s split-window -v -c "#{pane_current_path}"
bind-key c new-window -c "$HOME"

# session management with a great overview on current sessions and their windows/panes **IMPORTANT**
bind-key . choose-tree -Zs

# create/attach remote session and ssh to given host
# bind-key X command-prompt -p "to: " "new-session -A -s Remote\; new-window -n \"(%1)\" -t Remote: \"ssh %1\""
bind-key X confirm-before kill-session

bind-key C-p pipe-pane 'cat >>~/Downloads/output.#I-#P'

# contexts helps me with pre-defined layouts so I can manage tasks better.
# by using contexts and close them on the end of my working period
# I can remove distractions from my workflow.
bind-key C display-menu -T 'which do you want to focus on?' -x R -y S \
'Teaching' 'u' "run-shell -b \"tmuxp load -y teaching > /dev/null\"" \
'Snapp' 's' "run-shell -b \"tmuxp load -y snapp > /dev/null\"" \
'Main' 'm' 'new-session -A -c $HOME -s Main' \
'Task' 't' 'command-prompt -p "name:" "run-shell -b \"tmuxp load -y %1 > /dev/null\""'

# review on tasks/plan on emacs org-mode
bind-key A display-popup -E -w 80% -h 60% emacs -nw --funcall org-agenda-list

# vim like copy-mode
bind-key -T copy-mode-vi v send-key -X begin-selection
bind-key -T copy-mode-vi y send-key -X copy-selection

# next/previous window movement
# the -r lets you repeat the key without having to repeat C-Space.
bind-key -r p select-window -t :-
bind-key -r n select-window -t :+

# swap windows position
bind-key -r P swap-window -t :-
bind-key -r N swap-window -t :+

# reload tmux config
# same as in command mode :source-file ~/tmux.conf
# or outside of tmux with `tmux source-file ~/tmux.conf`
bind-key r source-file ~/.tmux.conf \; display-message "Tmux configuration was reloaded based on ~\/.tmux.conf"

# allow Ctrl+k to clear the history
bind-key -n C-k clear-history

# make resizing panes easier
bind-key < resize-pane -L 5
bind-key > resize-pane -R 5
bind-key + resize-pane -U 5
bind-key - resize-pane -D 5
bind-key = select-layout even-vertical
bind-key | select-layout even-horizontal

# similar to main-horizontal but the large pane is placed on the
# left and the others spread from top to bottom along the right.
bind-key V select-layout main-vertical
bind-key H select-layout main-horizontal

# passes the mouse scroll events into the application
# so in the neovim for example you can have scrolling
# instead of scrolling in tmux.
bind-key -n WheelUpPane if-shell -F "#{alternate_on}" \
  "if-shell -F \"#{mouse_any_flag}\" \
    \"send-key -M\" \
    \"send-key -N 3 Up\"" \
  "copy-mode -e ; send-key -M"
bind-key -n WheelDownPane if-shell -F "#{alternate_on}" \
  "if-shell -F \"#{mouse_any_flag}\" \
    \"send-key -M\" \
    \"send-key -N 3 Down\"" \
  "if-shell -F \"#{pane_in_mode}\" \
    \"send-key -M\""
