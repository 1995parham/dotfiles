---
## Credit to erkexzcx
# https://github.com/curl/curl/wiki/DNS-over-HTTPS#publicly-available-servers

upstream:
  # these external DNS resolvers will be used.
  # Blocky picks 2 random resolvers from the list for each query
  # format for resolver: [net:]host:[port][/path].
  # net could be empty (default, shortcut for tcp+udp),
  # tcp+udp, tcp, udp, tcp-tls or https (DoH).
  # If port is empty, default port will be used
  # (53 for udp and tcp, 853 for tcp-tls, 443 for https (Doh))
  default:
    # - https://dns-family.adguard.com/dns-query
    # - 94.140.14.15
    # - 94.140.15.16
    - 77.88.8.2
    - 77.88.8.88
    - 193.58.251.251
    - 8.8.8.8
    - 4.2.2.4

# optional: use this DNS server to resolve blacklist urls and upstream DNS servers (DOH).
# Useful if no DNS resolver is configured and blocky needs to resolve a host name.
# Format net:IP:port, net must be udp or tcp
bootstrapDns:
  upstream: 8.8.8.8

# optional: custom IP address for domain name (with all sub-domains)
# example: query "printer.lan" or "my.printer.lan" will return 192.168.178.3
customDNS:
  mapping:
    internet.aut.ac.ir: 172.25.154.54
    tv2.aut.ac.ir: 172.16.4.252

# optional: definition, which DNS resolver(s) should be used for queries to the domain (with all sub-domains).
# Multiple resolvers must be separated by comma
# Example: Query client.fritz.box will ask DNS server 192.168.178.1.
# This is necessary for local network, to resolve clients by host name
# ProShecan is only works on home local network.
conditional:
  mapping:
    galaxy.ansible.com: pro.shecan.ir
    k8s.gcr.io: pro.shecan.ir
    registry.access.redhat.com: pro.shecan.ir
    gcr.io: pro.shecan.ir
    docker.io: pro.shecan.ir
    gitlab.com: pro.shecan.ir
    eclipse.org: pro.shecan.ir
    anaconda.com: pro.shecan.ir
    conda.io: pro.shecan.ir

# optional: use black and white lists to block queries
# (for example ads, trackers, adult pages etc.)
blocking:
  # definition of blacklist groups. Can be external link (http/https) or local file
  blackLists:
    ads:
      - /opt/hosts/hosts
    special:
      - /opt/hosts/alternates/fakenews-gambling-porn-social/hosts
  whiteLists:
    special:
      - |
        /whatsapp/
        /webengage/
        /reddit/
        /redditstatic/
        /redd/
  # definition: which groups should be applied for which client
  clientGroupsBlock:
    # default will be used, if no special definition for a client name exists
    default:
      - ads
      - special

  # which response will be sent, if query is blocked:
  # zeroIp: 0.0.0.0 will be returned (default)
  # nxDomain: return NXDOMAIN as return code
  # comma separated list of destination IP adresses
  # (for example: 192.100.100.15, 2001:0db8:85a3:08d3:1319:8a2e:0370:7344).
  # Should contain ipv4 and ipv6 to cover all query types.
  # Useful with running web server on this address to display the "blocked" page.
  blockType: zeroIp
  # optional: automatically list refresh period in minutes. Default: 4h.
  # Negative value -> deactivate automatically refresh.
  # 0 value -> use default
  refreshPeriod: 0

# optional: configuration for caching of DNS responses
caching:
  # amount in minutes, how long a response must be cached (min value).
  # If <=0, use response's TTL, if >0 use this value, if TTL is smaller
  # Default: 0
  minTime: 600
  # amount in minutes, how long a response must be cached (max value).
  # If <0, do not cache responses
  # If 0, use TTL
  # If > 0, use this value, if TTL is greater
  # Default: 0
  maxTime: 0
  # if true, will preload DNS results for often used queries
  # (names queried more than 5 times in a 2 hour time window).
  # Results in cache will be loaded again on their expire (Time-to-live).
  # This improves the response time for often used queries,
  # but significantly increases external traffic
  # it is recommended to increase "minTime" to reduce the number
  # of prefetch queries to external resolvers.
  # default: false
  prefetching: true

# optional: configuration for prometheus metrics endpoint
prometheus:
  # enabled if true
  enable: false
  # url path, optional (default '/metrics')
  path: /metrics

# optional: write query information (question, answer, client, duration etc) to daily csv file
queryLog:
  type: console

# optional: DNS listener port and bind ip address, default 53 (UDP and TCP). Example: 53, :53, 127.0.0.1:53
port: 127.0.0.53:53
# optional: HTTP listener port, default 0 = no http listener. If > 0, will be used for prometheus metrics, pprof, REST API, DoH ...
# httpPort: 4000
# optional: HTTPS listener port, default 0 = no http listener. If > 0, will be used for prometheus metrics, pprof, REST API, DoH...
# httpsPort: 443
# mandatory, if https port > 0: path to cert and key file for SSL encryption
# httpsCertFile: server.crt
# httpsKeyFile: server.key
# optional: Log level (one from debug, info, warn, error). Default: info
logLevel: info
# optional: Log format (text or json). Default: text
logFormat: text
